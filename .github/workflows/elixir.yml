# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Elixir CI

on:
  push:
    branches:
    - main
    - feat/*
    - develop
    - fix/* 
    - refactor/*
    - feature/*
  
  pull_request:
    branches:
    - main
    - feat/*
    - develop
    - fix/* 
    - refactor/*
    - feature/*
    
permissions:
  contents: read

jobs:
  build:

    name: Build and test
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:11
        ports: ['5432:5432']
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          
    steps:
    - uses: actions/checkout@v3
    - name: Set up Elixir
      uses: erlef/setup-beam@988e02bfe678367a02564f65ca2e37726dc0268f
      with:
        elixir-version: '1.13.1' # Define the elixir version [required]
        otp-version: '24' # Define the OTP version [required]
      env:
        # See:
        # https://github.com/erlef/setup-beam/blob/master/src/setup-beam.js#L340
        ImageOS: ubuntu20 
          
    - name: Restore dependencies cache
      uses: actions/cache@v3
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-
    - name: Install dependencies
      run: mix deps.get
    - name: Run tests
      run: mix test
      # Don't cache PLTs based on mix.lock hash, as Dialyzer can incrementally update even old ones
      # Cache key based on Elixir & Erlang version (also useful when running in matrix)
    - name: Restore PLT cache
      uses: actions/cache@v2
      id: plt_cache
      with:
          key: |
            ${{ runner.os }}-${{ steps.beam.outputs.elixir-version }}-${{ steps.beam.outputs.otp-version }}-plt
          restore-keys: |
            ${{ runner.os }}-${{ steps.beam.outputs.elixir-version }}-${{ steps.beam.outputs.otp-version }}-plt
          path: |
            priv/plts

      # Create PLTs if no cache was found
    - name: Create PLTs
      if: steps.plt_cache.outputs.cache-hit != 'true'
      run: mix dialyzer --plt

    - name: Run dialyzer
      run: mix dialyzer --format github      
